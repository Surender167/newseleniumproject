<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="6" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-06-01T19:57:13 IST" name="Default suite" finished-at="2022-06-01T19:57:49 IST" duration-ms="35872">
    <groups>
      <group name="admin">
        <method signature="Regressionsuite.testcase7()[pri:6, instance:testNGpractice.Regressionsuite@4fb3ee4e]" name="testcase7" class="testNGpractice.Regressionsuite"/>
        <method signature="Regressionsuite.testcase8()[pri:7, instance:testNGpractice.Regressionsuite@4fb3ee4e]" name="testcase8" class="testNGpractice.Regressionsuite"/>
        <method signature="Regressionsuite.testcase10()[pri:8, instance:testNGpractice.Regressionsuite@4fb3ee4e]" name="testcase10" class="testNGpractice.Regressionsuite"/>
      </group> <!-- admin -->
      <group name="login">
        <method signature="Regressionsuite.testcase1()[pri:1, instance:testNGpractice.Regressionsuite@4fb3ee4e]" name="testcase1" class="testNGpractice.Regressionsuite"/>
        <method signature="Regressionsuite.testcase2()[pri:2, instance:testNGpractice.Regressionsuite@4fb3ee4e]" name="testcase2" class="testNGpractice.Regressionsuite"/>
        <method signature="Regressionsuite.testcase3()[pri:3, instance:testNGpractice.Regressionsuite@4fb3ee4e]" name="testcase3" class="testNGpractice.Regressionsuite"/>
        <method signature="Regressionsuite.testcase5()[pri:4, instance:testNGpractice.Regressionsuite@4fb3ee4e]" name="testcase5" class="testNGpractice.Regressionsuite"/>
        <method signature="Regressionsuite.testcase6()[pri:5, instance:testNGpractice.Regressionsuite@4fb3ee4e]" name="testcase6" class="testNGpractice.Regressionsuite"/>
      </group> <!-- login -->
    </groups>
    <test started-at="2022-06-01T19:57:13 IST" name="Default test" finished-at="2022-06-01T19:57:49 IST" duration-ms="35872">
      <class name="testNGpractice.Regressionsuite">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testNGpractice.Regressionsuite@4fb3ee4e]" started-at="2022-06-01T19:57:13 IST" name="beforeMethod" finished-at="2022-06-01T19:57:18 IST" duration-ms="4751" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testcase1()[pri:1, instance:testNGpractice.Regressionsuite@4fb3ee4e]" started-at="2022-06-01T19:57:18 IST" name="testcase1" finished-at="2022-06-01T19:57:19 IST" duration-ms="854" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [MainHMRR] but found [MainHMR]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [MainHMRR] but found [MainHMR]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at testNGpractice.Regressionsuite.testcase1(Regressionsuite.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testNGpractice.Regressionsuite@4fb3ee4e]" started-at="2022-06-01T19:57:19 IST" name="afterMethod" finished-at="2022-06-01T19:57:19 IST" duration-ms="391" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testNGpractice.Regressionsuite@4fb3ee4e]" started-at="2022-06-01T19:57:19 IST" name="beforeMethod" finished-at="2022-06-01T19:57:23 IST" duration-ms="3037" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testcase2()[pri:2, instance:testNGpractice.Regressionsuite@4fb3ee4e]" started-at="2022-06-01T19:57:23 IST" name="testcase2" finished-at="2022-06-01T19:57:23 IST" duration-ms="364" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testNGpractice.Regressionsuite@4fb3ee4e]" started-at="2022-06-01T19:57:23 IST" name="afterMethod" finished-at="2022-06-01T19:57:23 IST" duration-ms="413" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testNGpractice.Regressionsuite@4fb3ee4e]" started-at="2022-06-01T19:57:23 IST" name="beforeMethod" finished-at="2022-06-01T19:57:26 IST" duration-ms="3132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testcase3()[pri:3, instance:testNGpractice.Regressionsuite@4fb3ee4e]" started-at="2022-06-01T19:57:26 IST" name="testcase3" finished-at="2022-06-01T19:57:27 IST" duration-ms="439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase3 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testNGpractice.Regressionsuite@4fb3ee4e]" started-at="2022-06-01T19:57:27 IST" name="afterMethod" finished-at="2022-06-01T19:57:27 IST" duration-ms="377" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testNGpractice.Regressionsuite@4fb3ee4e]" started-at="2022-06-01T19:57:27 IST" name="beforeMethod" finished-at="2022-06-01T19:57:31 IST" duration-ms="3616" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testcase5()[pri:4, instance:testNGpractice.Regressionsuite@4fb3ee4e]" started-at="2022-06-01T19:57:31 IST" name="testcase5" finished-at="2022-06-01T19:57:31 IST" duration-ms="305" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase5 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testNGpractice.Regressionsuite@4fb3ee4e]" started-at="2022-06-01T19:57:31 IST" name="afterMethod" finished-at="2022-06-01T19:57:32 IST" duration-ms="386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testNGpractice.Regressionsuite@4fb3ee4e]" started-at="2022-06-01T19:57:32 IST" name="beforeMethod" finished-at="2022-06-01T19:57:36 IST" duration-ms="4813" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testcase6()[pri:5, instance:testNGpractice.Regressionsuite@4fb3ee4e]" started-at="2022-06-01T19:57:36 IST" name="testcase6" finished-at="2022-06-01T19:57:37 IST" duration-ms="382" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase6 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testNGpractice.Regressionsuite@4fb3ee4e]" started-at="2022-06-01T19:57:37 IST" name="afterMethod" finished-at="2022-06-01T19:57:37 IST" duration-ms="378" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testcase7()[pri:6, instance:testNGpractice.Regressionsuite@4fb3ee4e]" started-at="2022-06-01T19:57:37 IST" name="testcase7" finished-at="2022-06-01T19:57:37 IST" depends-on-methods="testNGpractice.Regressionsuite.testcase1" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Regressionsuite.testcase7()[pri:6, instance:testNGpractice.Regressionsuite@4fb3ee4e] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Regressionsuite.testcase7()[pri:6, instance:testNGpractice.Regressionsuite@4fb3ee4e] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase7 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testNGpractice.Regressionsuite@4fb3ee4e]" started-at="2022-06-01T19:57:37 IST" name="beforeMethod" finished-at="2022-06-01T19:57:42 IST" duration-ms="4504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testcase8()[pri:7, instance:testNGpractice.Regressionsuite@4fb3ee4e]" started-at="2022-06-01T19:57:42 IST" name="testcase8" finished-at="2022-06-01T19:57:44 IST" duration-ms="2380" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase8 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testNGpractice.Regressionsuite@4fb3ee4e]" started-at="2022-06-01T19:57:44 IST" name="afterMethod" finished-at="2022-06-01T19:57:44 IST" duration-ms="434" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testNGpractice.Regressionsuite@4fb3ee4e]" started-at="2022-06-01T19:57:44 IST" name="beforeMethod" finished-at="2022-06-01T19:57:48 IST" duration-ms="3463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testcase10()[pri:8, instance:testNGpractice.Regressionsuite@4fb3ee4e]" started-at="2022-06-01T19:57:48 IST" name="testcase10" finished-at="2022-06-01T19:57:49 IST" duration-ms="979" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase10 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testNGpractice.Regressionsuite@4fb3ee4e]" started-at="2022-06-01T19:57:49 IST" name="afterMethod" finished-at="2022-06-01T19:57:49 IST" duration-ms="375" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testNGpractice.Regressionsuite -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
